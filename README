	Plugin for (TODO: synopsis)

						*vlh* *vimlocalhistory*
	Contents:
		Commands.................................|vlh-commands|
		Configuration............................|vlh-configuration|
		Release notes............................|vlh-release-notes|
		TODO.....................................|vlh-todo|
		Alternatives.............................|vlh-alternatives|


TODO: description
Automatically saves files on write using git.  This provides a convenient,
automatic backup system of, e.g. files in /etc that are modified, as well as a
poor man's "local history" (a lÃ¡ the eclipse feature with the same name).


==============================================================================
COMMANDS						*vlh-commands*	{{{1

VLHDiff
VLHOpen
VLHRestore

History
	diff a specific item
	open a specific item
	restore a specific item
		i.e., open to the current buffer and write


}}}
==============================================================================
CONFIGURATION 					*vlh-configuration*	{{{

g:vlh_respository_dir
g:vlh_exclude_file_pattern
g:vlh_exclude_path_pattern

------------------------------------------------------------------------
These can't be changed dynamically
g:vlh_log_dir


}}}
==============================================================================
RELEASE NOTES					*vlh-release-notes*	{{{1

}}}
==============================================================================
TODO							*vlh-todo*	{{{1

Cleanup this Readme
	do the TODOs ( e.g., write the descriptions)
	write a little more about the alternatives

Deal with project-todo and project-fixme

Post to vim./mailing list
Maybe package for debian
	http://pkg-vim.alioth.debian.org/vim-policy.txt
Perhaps also post to github
	-configure hades to autopush to github
	-add a readme for submitting patches
		in email format
		via pull

Add Tagging

Periodic gc or something
stripping out older revs when repo gets too big

VLH* completion
	add ++.. from git-lg

Deal with slow VLH* autocomplete .. maybe

Fix VLHDiff
	It doesn't work well with, e.g. project (the big problem seems to be the
		use of wincmd R)
	We need to set nodiff after the diff'd buffer closes

Implement scp://*
	g:vlh_scp_root_path  default to '.remotes'
	treat those as roots, e.g.
		/home
		/.remotes
			/myhost1
				/
			/myhost2

File history buffer
	view (git lg ...)
	open
	diff
	restore
	edit msg
		- replace the buffer with another buffer that just has the commit msg
		- on save, kill the new buffer and show the previous one again

	make readonly

	Highlight (either with git's colouring or with syntax highlighting)

	In addition to syntax highlighting (commits, authors, etc.) also highlight
	the selected item (several lines), to make clear the target of commands
	(open/diff/restore/edit msg)


------------------------------------------------------------------------
Long Term (maybe features)

edit history message feature
cleanup disk space feature
delete commit feature
unify local history and repository history
	(e.g. support diffs of some local history revision against a repo. version)
load undo history
	It might be cool to run a command that configures the undo stack to let
	you undo/redo through revisions.  So if your undo stack is currently 
		A -> B ->C
	we could (perhaps) prepend it with one item per revision, so that undoing
	past A essentially resulted in replacing the entire buffer with the
	previous version of the file


}}}
==============================================================================
ALTERNATIVES					*vlh-alternatives*	{{{1

rcsvers.vim
http://vim.sourceforge.net/scripts/script.php?script_id=563

Saves backups in RCS whenever a file is saved.  Inspired by savevers.vim.


------------------------------------------------------------------------
savevers.vim
http://vim.sourceforge.net/scripts/script.php?script_id=89

Automatically saves and compares multiple, sequentially numbered old revisions
of files.


}}}




vim:ft=help ts=8 sw=8 noexpandtab tw=78 foldmethod=marker
